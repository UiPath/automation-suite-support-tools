"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[664],{8778:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var o=t(5893),s=t(1151);const i={sidebar_position:2},r="Networking Cheatsheet",a={id:"commands/networking-commands",title:"Networking Cheatsheet",description:"This is not official documentation for AutomationSuite",source:"@site/docs/commands/networking-commands.md",sourceDirName:"commands",slug:"/commands/networking-commands",permalink:"/automation-suite-support-tools/docs/commands/networking-commands",draft:!1,unlisted:!1,editUrl:"https://uipath.github.com/UiPath/automation-suite-support-tools/edit/master/docs/docs/commands/networking-commands.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Kubernetes Cheatsheet",permalink:"/automation-suite-support-tools/docs/commands/as-cheat-sheet"},next:{title:"Known Issues",permalink:"/automation-suite-support-tools/docs/category/known-issues"}},c={},d=[];function l(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",p:"p",pre:"pre",...(0,s.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"networking-cheatsheet",children:"Networking Cheatsheet"}),"\n",(0,o.jsx)(n.admonition,{title:"Note",type:"danger",children:(0,o.jsx)(n.p,{children:"This is not official documentation for AutomationSuite"})}),"\n",(0,o.jsx)(n.p,{children:"Glossary of frequently used commands"}),"\n",(0,o.jsx)(n.p,{children:"Check connectivity of a URL"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'if nc -z -v -w5 loki:3100 &>/dev/null; then echo "connected"; else echo "not able to connect"; fi\n'})}),"\n",(0,o.jsx)(n.p,{children:"Check if IP and Port combo is reachable"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"telnet 127.0.0.1 8080\n"})}),"\n",(0,o.jsx)(n.p,{children:"Port forwarding a service"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"kubectl -n rabbitmq port-forward service/rabbitmq 8800:15672\nkubectl -n rook-ceph port-forward service/rook-ceph-mgr-dashboard 8800:8443\n"})}),"\n",(0,o.jsx)(n.p,{children:"Check if LB is resolvable via host"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"curl -m 5 -v -k -i --resolve LB_URL:443:IP_OF_HOST https://LB_URL\n"})}),"\n",(0,o.jsx)(n.p,{children:"Check connectivity in loop"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"for i in {1..100}; do curl -m 5 -v -k -i --resolve LB_URL:443:IP_OF_HOST https://LB_URL; done\n"})}),"\n",(0,o.jsx)(n.p,{children:"Check if a URL is resolvable via all DNS servers"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"cat /etc/resolv.conf\n\nnslookup github.com FIRST_DNS_SERVER_IP\nnslookup github.com SECOND_DNS_SERVER_IP\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Check Connectivity between Nodes (Overlay Test)\nNetwork connectivity test can be done via ",(0,o.jsx)(n.a,{href:"https://ranchermanager.docs.rancher.com/v2.5/troubleshooting/other-troubleshooting-tips/networking",children:"overlay-networking-test"}),"\nOr the same test can be done via Diagnostics tool if it's an airgap environment"]})]})}function h(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>r});var o=t(7294);const s={},i=o.createContext(s);function r(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);