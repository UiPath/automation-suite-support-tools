"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[2321],{4951:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>i});var o=t(5893),r=t(1151);const s={sidebar_position:5},c="Un-Install CEPH",l={id:"ceph/uninstall-ceph",title:"Un-Install CEPH",description:"This is not official documentation for AutomationSuite",source:"@site/docs/ceph/uninstall-ceph.md",sourceDirName:"ceph",slug:"/ceph/uninstall-ceph",permalink:"/automation-suite-support-tools/docs/ceph/uninstall-ceph",draft:!1,unlisted:!1,editUrl:"https://uipath.github.com/UiPath/automation-suite-support-tools/edit/master/docs/docs/ceph/uninstall-ceph.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Re-Create CEPH Cluster",permalink:"/automation-suite-support-tools/docs/ceph/ceph-recreate-cluster"},next:{title:"DR Troubleshooting",permalink:"/automation-suite-support-tools/docs/category/dr-troubleshooting"}},a={},i=[];function p(e){const n={admonition:"admonition",code:"code",h1:"h1",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,r.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"un-install-ceph",children:"Un-Install CEPH"}),"\n",(0,o.jsx)(n.admonition,{title:"Note",type:"danger",children:(0,o.jsx)(n.p,{children:"This is not official documentation for AutomationSuite"})}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Disable Self Heal on argo"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'kubectl -n argocd patch application fabric-installer --type=json -p \'[\n{"op":"replace","path":"/spec/syncPolicy/automated/selfHeal","value":false}\n]\'\nkubectl -n argocd patch application rook-ceph-object-store --type=json -p \'[\n{"op":"replace","path":"/spec/syncPolicy/automated/selfHeal","value":false}\n]\'\nkubectl -n argocd patch application rook-ceph-operator --type=json -p \'[\n{"op":"replace","path":"/spec/syncPolicy/automated/selfHeal","value":false}\n]\'\n'})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Note"}),": Make sure nothing is syncing when running this or self-heal will not be disabled"]}),"\n",(0,o.jsx)(n.p,{children:"Also make sure to run the following to prevent remenants from remaining."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Remove the finalizer on the cluster\nkubectl patch cephcluster -n rook-ceph rook-ceph  --type merge -p \'{"metadata":{"finalizers": [null]}}\'\n\n#Delete the rook-ceph finailers for preventing accidentle delets.\nfor CM in $(kubectl get cm -n rook-ceph | grep -v NAME | cut -d " " -f 1 | xargs); do kubectl patch cm -n rook-ceph $CM --type merge -p \'{"metadata":{"finalizers": [null]}}\'; done\nkubectl get cm | grep rook | xargs -l1 --no-run-if-empty -- sh -c \'kubectl delete cm $0\'\n\nfor SECRET in $(kubectl get secret -n rook-ceph | grep -v NAME | cut -d " " -f 1 | xargs); do kubectl patch secret -n rook-ceph $SECRET --type merge -p \'{"metadata":{"finalizers": [null]}}\'; done\nkubectl get secret | grep rook | xargs -l1 --no-run-if-empty -- sh -c \'kubectl delete secret $0\'\n'})}),"\n",(0,o.jsxs)(n.ol,{start:"2",children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Delete rook-ceph-operator and rook-ceph-object-store apps from argoCD"}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Delete all CEPH CRDs, if the delete CRD\u2019s command got stuck then repeat patching the CRDs followed by deleting the CRDs"}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'for CRD in $(kubectl get crd -n rook-ceph | grep rook.io | cut -d " " -f 1 | xargs); do kubectl patch crd -n rook-ceph $CRD --type merge -p \'{"metadata":{"finalizers": [null]}}\'; done\nkubectl get crd | grep rook | xargs -l1 --no-run-if-empty -- sh -c \'kubectl delete crd $0\'\n'})}),"\n",(0,o.jsxs)(n.ol,{start:"4",children:["\n",(0,o.jsx)(n.li,{children:"Cleanup rook folder and run this command on all the nodes"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"rm -rf /var/lib/rook/\n"})}),"\n",(0,o.jsxs)(n.ol,{start:"5",children:["\n",(0,o.jsx)(n.li,{children:"Delete rook-ceph namespace"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"kubectl delete ns rook-ceph \n"})}),"\n",(0,o.jsxs)(n.ol,{start:"6",children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Re-Sync rook-ceph-operator from argoCD"}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Re-Sync rook-ceph-object-store from argoCD"}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Re-Run credential manager job and for it to trigger, Sync sf-core application from argoCD UI"}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Re-Run fabric-configure app via argoCD UI"}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"If rook-ceph-object-store app is healthy then check if orchestrator app is healthy, if it\u2019s not then delete the pods that corresponds to orchestrator and verify if the pods are getting bootup successfully, if they do then re-sync the whole UiPath application from argoCD UI"}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:"Revert changes that have been done in step1 i.e. to enable self heal on the applications"}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>l,a:()=>c});var o=t(7294);const r={},s=o.createContext(r);function c(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);