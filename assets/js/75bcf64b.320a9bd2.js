"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[7407],{523:(e,t,c)=>{c.r(t),c.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var o=c(5893),n=c(1151);const r={sidebar_position:4},s="Re-Create CEPH Cluster",a={id:"ceph/ceph-recreate-cluster",title:"Re-Create CEPH Cluster",description:"This is not official documentation for AutomationSuite",source:"@site/docs/ceph/ceph-recreate-cluster.md",sourceDirName:"ceph",slug:"/ceph/ceph-recreate-cluster",permalink:"/automation-suite-support-tools/docs/ceph/ceph-recreate-cluster",draft:!1,unlisted:!1,editUrl:"https://uipath.github.com/UiPath/automation-suite-support-tools/edit/master/docs/docs/ceph/ceph-recreate-cluster.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"CEPH OnDemand Backup",permalink:"/automation-suite-support-tools/docs/ceph/ceph-ondemand-backup"},next:{title:"Un-Install CEPH",permalink:"/automation-suite-support-tools/docs/ceph/uninstall-ceph"}},i={},l=[];function p(e){const t={admonition:"admonition",code:"code",h1:"h1",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,n.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"re-create-ceph-cluster",children:"Re-Create CEPH Cluster"}),"\n",(0,o.jsx)(t.admonition,{title:"Note",type:"danger",children:(0,o.jsx)(t.p,{children:"This is not official documentation for AutomationSuite"})}),"\n",(0,o.jsx)(t.p,{children:"In certain situations we may need a way to re-create the ceph cluster. This section will guide you to on the same"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"Disable self heal on argocd app"}),"\n"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:'kubectl -n argocd patch application fabric-installer --type=json -p \'[{"op":"replace","path":"/spec/syncPolicy/automated/selfHeal","value":false}]\'\nkubectl -n argocd patch application rook-ceph-operator --type=json -p \'[{"op":"replace","path":"/spec/syncPolicy/automated/selfHeal","value":false}]\'\nkubectl -n argocd patch application rook-ceph-object-store --type=json -p \'[{"op":"replace","path":"/spec/syncPolicy/automated/selfHeal","value":false}]\'\n'})}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"Delete ceph resources"}),"\n"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:'kubectl -n rook-ceph delete deploy --all\nk8s_resources_to_clean=(job pod serviceaccount service secret configmap persistentvolumeclaim)\nfor resource in "${k8s_resources_to_clean[@]}"; do\n  kubectl -n rook-ceph  get "${resource}" --no-headers -o name  | grep "${resource}" | xargs -r kubectl -n rook-ceph  patch --type=json -p \'[{"op":"remove" , "path": "/metadata/finalizers"}]\' || true\n  kubectl -n rook-ceph  get "${resource}" --no-headers -o name  | grep "${resource}" | xargs -r kubectl -n rook-ceph delete --force --ignore-not-found\ndone\nfor dsPod in $(kubectl -n kube-system get pod -l app=longhorn-loop-device-cleaner -o name); do\n  kubectl -n kube-system exec "${dsPod}"  -- rm -rf /var/lib/rook || true\ndone\n'})}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"Re-create ceph cluster"}),"\n"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"argocd app sync rook-ceph-operator\nargocd app sync rook-ceph-object-store\n"})}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"Wait for ceph objectstore  get re-created"}),"\n"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"kubectl -n rook-ceph get cephobjectstore\n"})}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"CephObjectStoreStatus",src:c(3089).Z+"",width:"1008",height:"290"})}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"Re-run rook-ceph-configure-script-job to create amin user"}),"\n"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"kubectl get job -A | grep 'rook-ceph-configure-script-job'\nkubectl -n rook-ceph get job \"rook-ceph-configure-script-job\" -o json | jq 'del(. | .spec.selector, .spec.template.metadata.labels)' | kubectl replace --force -f -\nkubectl -n rook-ceph wait --timeout=10m --for=condition=complete \"job/rook-ceph-configure-script-job\"\n"})}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"CephBackupStatus",src:c(9471).Z+"",width:"2588",height:"492"})}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"Verify the admin credentials secret is created"}),"\n"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:"kubectl -n \"rook-ceph\" get secret ceph-object-store-secret --show-labels  | grep 'config-discovery=yes'\n"})}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"Re-run credential manager job to create service specific bucket and users"}),"\n"]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-bash",children:'kubectl -n uipath-infra get job "credential-manager-job" -o json | jq \'del(. | .spec.selector, .spec.template.metadata.labels)\' | kubectl replace --force -f -\nkubectl -n uipath-infra wait --timeout=10m --for=condition=complete "job/credential-manager-job"\n'})})]})}function u(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},9471:(e,t,c)=>{c.d(t,{Z:()=>o});const o=c.p+"assets/images/ceph-backup-status-74866869635abbc61257ae4e4c3f4d59.png"},3089:(e,t,c)=>{c.d(t,{Z:()=>o});const o=c.p+"assets/images/ceph-objectstore-status-3cc205a4fd4fe8ac9f9808d2736ec0d1.png"},1151:(e,t,c)=>{c.d(t,{Z:()=>a,a:()=>s});var o=c(7294);const n={},r=o.createContext(n);function s(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);